/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BilateralFilter;

import Cuoiki_main.*;
import com.sun.java.accessibility.util.AWTEventMonitor;

import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author VietHien
 */
public class Monitor extends javax.swing.JFrame {

    final JFileChooser fc = new JFileChooser();
    boolean available = false, save = false;
    Filter filter = new Filter();
    File f;

    /**
     * Creates new form Monitor
     */
    public Monitor() {
        initComponents();
        txfRange.setText("5");
        txfSgmS.setText("5");
        txfSgmR.setText("5");
    }
    public static Cuoiki_main.NewJFrame main1 = new NewJFrame();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bntOpen = new javax.swing.JButton();
        pnlBefore = new javax.swing.JPanel();
        lblBefore = new javax.swing.JLabel();
        pnlAfter = new javax.swing.JPanel();
        lblAfter = new javax.swing.JLabel();
        bntSave = new javax.swing.JButton();
        pnlMethod = new javax.swing.JPanel();
        lblMethor = new javax.swing.JLabel();
        cbbMethod = new javax.swing.JComboBox();
        ckbGray = new javax.swing.JCheckBox();
        pnlBilateral = new javax.swing.JPanel();
        lblRange = new javax.swing.JLabel();
        txfRange = new javax.swing.JTextField();
        lblSgmS = new javax.swing.JLabel();
        txfSgmS = new javax.swing.JTextField();
        lblSgmR = new javax.swing.JLabel();
        txfSgmR = new javax.swing.JTextField();
        bntProccess = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        txfTime = new javax.swing.JTextField();
        lblUnit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bntOpen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntOpen.setText("Open");
        bntOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOpenActionPerformed(evt);
            }
        });

        pnlBefore.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Before"));

        lblBefore.setAutoscrolls(true);

        javax.swing.GroupLayout pnlBeforeLayout = new javax.swing.GroupLayout(pnlBefore);
        pnlBefore.setLayout(pnlBeforeLayout);
        pnlBeforeLayout.setHorizontalGroup(
            pnlBeforeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlBeforeLayout.setVerticalGroup(
            pnlBeforeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlAfter.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "After"));

        javax.swing.GroupLayout pnlAfterLayout = new javax.swing.GroupLayout(pnlAfter);
        pnlAfter.setLayout(pnlAfterLayout);
        pnlAfterLayout.setHorizontalGroup(
            pnlAfterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAfter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAfterLayout.setVerticalGroup(
            pnlAfterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAfter, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        bntSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntSave.setText("Save");
        bntSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSaveActionPerformed(evt);
            }
        });

        lblMethor.setText("choose a method to proccess");

        cbbMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bilateral Filter" }));
        cbbMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMethodActionPerformed(evt);
            }
        });

        ckbGray.setText("GrayScale");
        ckbGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbGrayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMethodLayout = new javax.swing.GroupLayout(pnlMethod);
        pnlMethod.setLayout(pnlMethodLayout);
        pnlMethodLayout.setHorizontalGroup(
            pnlMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMethodLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMethodLayout.createSequentialGroup()
                        .addComponent(cbbMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlMethodLayout.createSequentialGroup()
                        .addComponent(lblMethor, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(ckbGray)
                        .addContainerGap(56, Short.MAX_VALUE))))
        );
        pnlMethodLayout.setVerticalGroup(
            pnlMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMethodLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbGray)
                    .addComponent(lblMethor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblRange.setText("Range");

        txfRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfRangeActionPerformed(evt);
            }
        });

        lblSgmS.setText("SigmaS");

        txfSgmS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfSgmSActionPerformed(evt);
            }
        });

        lblSgmR.setText("SigmaR");

        bntProccess.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bntProccess.setText("Process");
        bntProccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntProccessActionPerformed(evt);
            }
        });

        lblTime.setText("Processing time:");

        txfTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBilateralLayout = new javax.swing.GroupLayout(pnlBilateral);
        pnlBilateral.setLayout(pnlBilateralLayout);
        pnlBilateralLayout.setHorizontalGroup(
            pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBilateralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSgmS)
                            .addComponent(lblRange))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfRange, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(txfSgmS)))
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addComponent(lblSgmR)
                        .addGap(18, 18, 18)
                        .addComponent(txfSgmR, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)))
                .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfTime, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(bntProccess, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(93, Short.MAX_VALUE))))
        );
        pnlBilateralLayout.setVerticalGroup(
            pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBilateralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addComponent(bntProccess, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBilateralLayout.createSequentialGroup()
                        .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRange))
                        .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlBilateralLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblSgmS))
                            .addGroup(pnlBilateralLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txfSgmS)))
                        .addGap(10, 10, 10)
                        .addGroup(pnlBilateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfSgmR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSgmR)
                            .addComponent(lblTime)
                            .addComponent(txfTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntSave, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlBilateral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlAfter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bntSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAfter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBilateral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOpenActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == bntOpen) {
            int returnVal = fc.showOpenDialog(Monitor.this);
            available = true;
            ckbGray.setSelected(false);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                try {
                    f = fc.getSelectedFile();
                    filter.setMyFile(fc.getSelectedFile());
                    filter.setMyImage(ImageIO.read(filter.getMyFile()));
                    ImageIcon labelIcon = new ImageIcon(filter.getMyImage().getScaledInstance(lblBefore.getWidth(), lblBefore.getHeight(), Image.SCALE_SMOOTH));
                    lblBefore.setIcon(labelIcon);
                    //flag = true;
                } catch (IOException ex) {
                    Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_bntOpenActionPerformed

    private void bntSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSaveActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == bntSave && available && save) {
            int returnVal = fc.showSaveDialog(Monitor.this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                try {
                    ImageIO.write(filter.getRsImage(), "png", fc.getSelectedFile());
                } catch (IOException ex) {
                    Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "You don't open a file or don't have a processed file!");
        }

    }//GEN-LAST:event_bntSaveActionPerformed

    private void cbbMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMethodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbMethodActionPerformed

    private void txfSgmSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfSgmSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfSgmSActionPerformed

    private void txfRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfRangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfRangeActionPerformed

    private void bntProccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntProccessActionPerformed
        // TODO add your handling code here:
        if (available) {
            int tam;
            double temp;
            long start, end, time;

            try {
                tam = Integer.parseInt(txfRange.getText());
            } catch (Exception ex) {
                tam = 5;
            }
            filter.setRange(tam);
            try {
                temp = Double.parseDouble(txfSgmS.getText());
            } catch (Exception ex) {
                temp = 5;
            }
            filter.setSigmaS(temp);
            try {
                temp = Double.parseDouble(txfSgmR.getText());
            } catch (Exception ex) {
                temp = 5;
            }
            filter.setSigmaR(temp);

            start = System.currentTimeMillis();
            filter.processBilateral();
            end = System.currentTimeMillis();
            filter.setRsImage(filter.displayImage());
            ImageIcon labelIcon = new ImageIcon(filter.getRsImage().getScaledInstance(lblAfter.getWidth(), lblAfter.getHeight(), Image.SCALE_SMOOTH));
            lblAfter.setIcon(labelIcon);
            filter.setMyFile(f);
            time = (long) ((end - start));
            txfTime.setText("" + time);
            lblUnit.setText("miliseconds");
            /* if(time<60){
             txfTime.setText(""+time);
             lblUnit.setText("seconds");
             }
             else {
             time = (long)(time/60);
             if(time<60){
             txfTime.setText(""+time);
             lblUnit.setText("minutes");   
             }
             else{
             time = (long)(time/60);
             txfTime.setText(""+time);
             lblUnit.setText("hours");
             }
             }*/
            save = true;
        } else {
            JOptionPane.showMessageDialog(null, "You don't open a file!");
        }
    }//GEN-LAST:event_bntProccessActionPerformed

    private void ckbGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbGrayActionPerformed
        // TODO add your handling code here:
        if (available) {
            if (ckbGray.isSelected()) {
                filter.setGrayFlag(true);
                filter.setData(filter.getData());
                filter.setMyImage(filter.displayImage());
                ImageIcon labelIcon = new ImageIcon(filter.getMyImage().getScaledInstance(lblBefore.getWidth(), lblBefore.getHeight(), Image.SCALE_SMOOTH));
                lblBefore.setIcon(labelIcon);
            } else {
                filter.setGrayFlag(false);
                filter.setMyFile(f);
                filter.setData(filter.getData());
                filter.setMyImage(filter.displayImage());
                ImageIcon labelIcon = new ImageIcon(filter.getMyImage().getScaledInstance(lblBefore.getWidth(), lblBefore.getHeight(), Image.SCALE_SMOOTH));
                lblBefore.setIcon(labelIcon);
            }
        } else {
            JOptionPane.showMessageDialog(null, "You don't open a file!");
            ckbGray.setSelected(false);
        }
    }//GEN-LAST:event_ckbGrayActionPerformed

    private void txfTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monitor().setVisible(true);                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntOpen;
    private javax.swing.JButton bntProccess;
    private javax.swing.JButton bntSave;
    private javax.swing.JComboBox cbbMethod;
    private javax.swing.JCheckBox ckbGray;
    private javax.swing.JLabel lblAfter;
    private javax.swing.JLabel lblBefore;
    private javax.swing.JLabel lblMethor;
    private javax.swing.JLabel lblRange;
    private javax.swing.JLabel lblSgmR;
    private javax.swing.JLabel lblSgmS;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblUnit;
    private javax.swing.JPanel pnlAfter;
    private javax.swing.JPanel pnlBefore;
    private javax.swing.JPanel pnlBilateral;
    private javax.swing.JPanel pnlMethod;
    private javax.swing.JTextField txfRange;
    private javax.swing.JTextField txfSgmR;
    private javax.swing.JTextField txfSgmS;
    private javax.swing.JTextField txfTime;
    // End of variables declaration//GEN-END:variables
}
